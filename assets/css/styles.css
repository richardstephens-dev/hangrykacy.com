:root {
    --text-color: #005357;
    --background-color: #b2dfdb;
    --highlight-color: #e0f7f7;
    --main-color: #4db6ac;
    --accent-color: #80cbc4;
}

body {
    font-family: Imbue, serif;
    margin: 0;
    background-color: var(--background-color);
    color: var(--text-color);
}

.header-logo {
    max-width: 100px;
}

.nav {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    padding: 0;
    list-style-type: none;
    margin-bottom: 20px;
}

.nav a {
    text-decoration: none;
    color: var(--text-color);
    margin: 0 10px;
    padding: 10px;
}

.nav a.active {
    border-bottom: 2px solid var(--highlight-color);
}

.header-grid {
    --min: 15ch;
    --gap: 1rem;
    place-content: center;
    display: grid;
    grid-gap: var(--gap);
    /* min() with 100% prevents overflow
    in extra narrow spaces */
    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));
  }
  

.recipe-card-component {
    --img-ratio: 3/2;
  
    display: flex;
    flex-direction: column;
    /* Supported for flexbox in modern browsers since April 2021 */
    gap: 1rem;
    box-shadow: 0 0 0.5rem hsl(0 0% 0% / 35%);
    border-radius: 0.5rem;
  }
  
  .recipe-card-component > img {
    aspect-ratio: var(--img-ratio);
    object-fit: cover;
    width: 100%;
  }
  
  .recipe-card-component > img:first-child {
    border-radius: 0.5rem 0.5rem 0 0;
  }
  
  .recipe-card-component > img:last-child {
    border-radius: 0 0 0.5rem 0.5rem;
    margin-top: auto;
  }
  
  .recipe-card-component > :not(img) {
    margin-left: 1rem;
    margin-right: 1rem;
  
    /* Prevent typography "orphans" */
    text-wrap: pretty;
  }
  
  .recipe-card-component > :not(img):first-child {
    margin-top: 1rem;
  }
  
  /* Enhanced `:not()` accepts a selector list,
  but as a fallback you can chain `:not()` instead */
  .recipe-card-component > :last-of-type:not(img, h2, h3, h4) {
    margin-bottom: 1rem;
  }
  
  .recipe-card-component > :not(h2, h3, h4) {
    font-size: 0.9rem;
  }
  
  .recipe-card-component > a {
    align-self: start;
  }
  

/* Responsive adjustments */
@media (max-width: 768px) {
    .header-logo {
        max-width: 80px; /* Smaller logo on mobile */
        top: 10px;
        left: 10px;
    }

    .header {
        padding-left: 100px; /* Adjust the padding to align with the smaller logo */
    }

    .nav {
        padding: 0 20px;
    }

    .nav a {
        margin: 5px; /* Adjusted for smaller screens */
    }

    .recipe-grid {
        padding: 0 20px;
    }
}

.sidebar {
    display: grid;
    grid-template-columns: fit-content(20ch) minmax(min(50vw, 30ch), 1fr);
  }  


@import url('https://fonts.googleapis.com/css?family=Rubik:700&display=swap');
 button {
	 position: relative;
	 display: inline-block;
	 cursor: pointer;
	 outline: none;
	 border: 0;
	 vertical-align: middle;
	 text-decoration: none;
	 font-size: inherit;
	 font-family: inherit;
}
 button.standard {
	 font-weight: 600;
     font-size: larger;
	 color: var(--text-color);
	 text-transform: uppercase;
	 padding: 0.5em 1em;
	 background: var(--highlight-color);
	 border: 2px solid var(--main-color);
	 border-radius: 0.75em;
	 transform-style: preserve-3d;
	 transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), background 150ms cubic-bezier(0, 0, 0.58, 1);
}
 button.standard::before {
	 position: absolute;
	 content: '';
	 width: 100%;
	 height: 100%;
	 top: 0;
	 left: 0;
	 right: 0;
	 bottom: 0;
	 background: var(--accent-color);
	 border-radius: inherit;
	 box-shadow: 0 0 0 2px var(--main-color);
	 transform: translate3d(0, 0.75em, -1em);
	 transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
}
 button.standard:hover {
	 background: var(--background-color);
	 transform: translate(0, 0.25em);
}
 button.standard:hover::before {
	 box-shadow: 0 0 0 2px var(--main-color);
	 transform: translate3d(0, 0.5em, -1em);
}
 button.standard:active {
	 background: var(--background-color);
	 transform: translate(0em, 0.75em);
}
 button.standard:active::before {
	 box-shadow: 0 0 0 2px var(--main-color);
	 transform: translate3d(0, 0, -1em);
}